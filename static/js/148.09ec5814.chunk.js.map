{"version":3,"file":"static/js/148.09ec5814.chunk.js","mappings":"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","sources":["webpack://lesson1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://lesson1/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","webpack://lesson1/./src/components/Profile/Profile.module.css?b512","webpack://lesson1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileStatus/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withRouter.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__GSiZ2\",\"form\":\"MyPosts_form__hrebz\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__yucwS\"};","import styles from './Post.module.css'\n\nconst Post = ( props ) => {\n    return (\n            <div className={styles.item}>\n              <img src='https://png.pngtree.com/png-vector/20191101/ourmid/pngtree-cartoon-color-simple-male-avatar-png-image_1934459.jpg' \n              alt=\"logo\" />\n              <span>{ props.message }</span>\n              <div>\n                <button>\n                  Like {props.counter}\n                </button>\n              </div>\n            </div>\n    )\n};\n\n\n\nexport default Post;","import styles from './MyPosts.module.css'\nimport Post from './Posts/Post';\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validation/validator';\nimport { Element } from '../../common/FormsControl/FormsControl';\n\n\n\nconst MyPosts = React.memo(props => {\n  let postsElements = props.posts.map(p => <Post message={p.text} counter={p.counter} />);\n\n  let addPost = (values) => {\n    props.addPost(values.newPost);\n  };\n\n  return (\n    <div className={styles.posts}>\n      <h3>My post</h3>\n      <div>\n        <div>\n          <AddPostFormRedux className={styles.form} onSubmit={addPost} />\n        </div>\n      </div>\n      <div>\n        {postsElements}\n      </div>\n    </div>\n  )\n});\n\nconst Textarea = Element('textarea');\n\nconst NewPostForm = (props) => {\n\n  return <form onSubmit={props.handleSubmit}>\n    <div>\n      <Field component={Textarea} name='newPost' placeholder='Write your thoughts' validate={[required, maxLengthCreator(11)]} />\n    </div>\n    <div>\n      <button>Post</button>\n    </div>\n  </form>\n}\nconst AddPostFormRedux = reduxForm({ form: 'profileAddPostForm' })(NewPostForm);\n\nexport default MyPosts;","\nimport { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../Redux/profileReducer';\nimport MyPosts from './MyPosts';\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n};\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPost) => {\n      dispatch(addPostActionCreator(newPost));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__g-Lde\"};","// extracted by mini-css-extract-plugin\nexport default {\"header_content\":\"ProfileInfo_header_content__gmY-H\"};","import React from \"react\";\nimport { useState, useEffect } from 'react';\n\nconst ProfileStatusHook = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status]);\n\n    let activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    let diactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    let onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    };\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <span onDoubleClick={activateEditMode}>{props.status || '-------'}</span>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input autoFocus={true} onBlur={diactivateEditMode} value={status} onChange={onStatusChange} />\n                </div>\n            }\n        </div>\n    )\n};\n\nexport default ProfileStatusHook;","import Preloader from '../../common/Preloader/Preloader';\nimport styles from './ProfileInfo.module.css'\n//import ProfileStatus from '../ProfileStatus/ProfileStatus'\nimport ProfileStatusHook from '../ProfileStatus/ProfileStatusHook';\n\nconst ProfileInfo = (props) => {\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    return (\n        <div>\n            <div className={styles.header_content}>\n                <img src='https://www.freepnglogos.com/uploads/book-png/library-archive-books-png-transparent-14.png' alt='logo' />\n            </div>\n            <div>\n                <img src={props.profile.photos.large} alt=\"logo\" />\n                <div>\n                    <span>{props.profile.fullName}</span>\n                </div>\n                <div>\n                    <span>{props.profile.aboutMe}</span>\n                </div>\n                <div>\n                    <span>{props.profile.lookingForAJobDescription}</span>\n                </div>\n                <ProfileStatusHook status={props.status} updateStatus={props.updateStatus} />\n            </div>\n        </div>\n    )\n};\n\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostContainer';\nimport classes from './Profile.module.css'\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\n\nconst Profile = (props) => {\n    return (\n        <div className={classes.content}>\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import Profile from \"./Profile\";\nimport React from \"react\";\nimport { getProfile, getStatus, updateStatus } from \"../../Redux/profileReducer\";\nimport { connect } from \"react-redux\";\nimport { withAuthNavigate } from \"../../hoc/withAuthNavigate\";\nimport { withRouter } from \"../../hoc/withRouter\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    isAuth: state.auth.isAuth,\n    logged: state.auth.id\n});\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.router.params.userId;\n        if (!userId) {\n            userId = this.props.logged;\n        }\n        this.props.getProfile(userId);\n        this.props.getStatus(userId);\n    }\n    render() {\n        return (\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\n        )\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus }),\n    withRouter,\n    withAuthNavigate\n)(ProfileContainer)","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nexport function withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        const location = useLocation();\n        const navigate = useNavigate();\n        const params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n    return ComponentWithRouterProp;\n}"],"names":["props","className","styles","src","alt","message","counter","MyPosts","React","postsElements","posts","map","p","text","AddPostFormRedux","onSubmit","values","addPost","newPost","Textarea","Element","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","required","maxLengthCreator","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","profile","photos","large","fullName","aboutMe","lookingForAJobDescription","Preloader","classes","ProfileContainer","userId","this","router","params","logged","getProfile","getStatus","compose","isAuth","auth","id","Component","location","useLocation","navigate","useNavigate","useParams","withAuthNavigate"],"sourceRoot":""}