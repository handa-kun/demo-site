{"version":3,"file":"static/js/434.042ef635.chunk.js","mappings":"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","sources":["webpack://lesson1/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://lesson1/./src/components/Profile/MyPosts/Posts/Post.module.css?5aca","components/Profile/MyPosts/Posts/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostContainer.jsx","webpack://lesson1/./src/components/Profile/Profile.module.css?b512","webpack://lesson1/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileStatus/ProfileStatusHook.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","hoc/withRouter.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"posts\":\"MyPosts_posts__GSiZ2\",\"form\":\"MyPosts_form__hrebz\"};","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Post_item__yucwS\"};","import { useState, useEffect } from 'react';\nimport styles from './Post.module.css'\n\nconst Post = (props) => {\n  const [counter, setCounter] = useState(props.counter);\n\n  useEffect(() => {\n    setCounter(props.counter)\n  }, [props.counter]);\n\n  return (\n    <div className={styles.item}>\n      <img src='https://png.pngtree.com/png-vector/20191101/ourmid/pngtree-cartoon-color-simple-male-avatar-png-image_1934459.jpg'\n        alt=\"logo\" />\n      <span>{props.message}</span>\n      <div>\n        <button onClick={() => setCounter(counter + 1)}>\n          Like {counter}\n        </button>\n        <button onClick={() => setCounter(counter - 1)}>\n          Dislike\n        </button>\n      </div>\n    </div>\n  )\n};\n\n\n\nexport default Post;","import styles from './MyPosts.module.css'\nimport Post from './Posts/Post';\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLengthCreator, required } from '../../../utils/validation/validator';\nimport { Element } from '../../common/FormsControl/FormsControl';\n\n\n\nconst MyPosts = React.memo(props => {\n  let postsElements = props.posts.map(p => <Post message={p.text} counter={p.counter} />);\n\n  let addPost = (values) => {\n    props.addPost(values.newPost);\n  };\n\n  return (\n    <div className={styles.posts}>\n      <h3>My post</h3>\n      <div>\n        <div>\n          <AddPostFormRedux className={styles.form} onSubmit={addPost} />\n        </div>\n      </div>\n      <div>\n        {postsElements}\n      </div>\n    </div>\n  )\n});\n\nconst Textarea = Element('textarea');\n\nconst NewPostForm = (props) => {\n\n  return <form onSubmit={props.handleSubmit}>\n    <div>\n      <Field component={Textarea} name='newPost' placeholder='Write your thoughts' validate={[required, maxLengthCreator(11)]} />\n    </div>\n    <div>\n      <button>Post</button>\n    </div>\n  </form>\n}\nconst AddPostFormRedux = reduxForm({ form: 'profileAddPostForm' })(NewPostForm);\n\nexport default MyPosts;","import { connect } from 'react-redux';\nimport { addPostActionCreator } from '../../../Redux/profileReducer';\nimport MyPosts from './MyPosts';\n\nlet mapStateToProps = (state) => {\n  return {\n    posts: state.profilePage.posts,\n    newPostText: state.profilePage.newPostText\n  }\n};\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    addPost: (newPost) => {\n      dispatch(addPostActionCreator(newPost));\n    },\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"Profile_content__g-Lde\"};","// extracted by mini-css-extract-plugin\nexport default {\"userPhoto\":\"ProfileInfo_userPhoto__PHwGN\"};","import React from \"react\";\nimport { useState, useEffect } from 'react';\n\nconst ProfileStatusHook = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status)\n    }, [props.status]);\n\n    let activateEditMode = () => {\n        setEditMode(true);\n    };\n\n    let diactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    };\n\n    let onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    };\n\n    return (\n        <div>\n            {!editMode &&\n                <div>\n                    <b onDoubleClick={activateEditMode}>Status:</b><p>{props.status || '-------'}</p>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input autoFocus={true} onBlur={diactivateEditMode} value={status} onChange={onStatusChange} />\n                </div>\n            }\n        </div>\n    )\n};\n\nexport default ProfileStatusHook;","import { reduxForm } from 'redux-form';\nimport { createField, Element } from '../../common/FormsControl/FormsControl';\n\nconst ProfileDataForm = ({ handleSubmit }) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            <div>\n                <button>Save</button>\n            </div>\n            <div>\n                <span>Full name:</span>{createField('Full name', 'fullName', Input, [])}\n            </div>\n            <div>\n                <span>My professional skills:</span>{createField('', 'lookingForAJobDescription', Input, [])}\n            </div>\n            <div>\n                <span>About me:</span>{createField('About Me', 'aboutMe', Textarea, [])}\n            </div>\n        </form>\n    )\n};\n\nconst Input = Element('input');\nconst Textarea = Element('textarea');\nexport const ProfileDataReduxForm = reduxForm({ form: 'edit-profile' })(ProfileDataForm);\n\n\n\n","import Preloader from '../../common/Preloader/Preloader';\nimport styles from './ProfileInfo.module.css'\nimport Photo from '../../../images/user.png'\nimport ProfileStatusHook from '../ProfileStatus/ProfileStatusHook';\nimport { useState } from 'react';\nimport { ProfileDataReduxForm } from './ProfileDataForm';\n\nconst ProfileInfo = ({ status, updateStatus, profile, savePhoto, saveProfile }) => {\n    const [editMode, setEditMode] = useState(false);\n\n    if (!profile) {\n        return <Preloader />\n    };\n\n    const selectedPhoto = (e) => {\n        if (e.target.files.length) {\n            savePhoto(e.target.files[0]);\n        };\n    };\n\n    const onSubmit = (formData) => {\n        saveProfile(formData);\n        setEditMode(false);\n    };\n\n    return (\n        <div className={styles.header_content}>\n            <div>\n                <img src={profile.photos.large || Photo} className={styles.userPhoto} alt=\"logo\" />\n                <input type=\"file\" onChange={selectedPhoto} />\n                {editMode\n                    ? <ProfileDataReduxForm initialValues={profile} onSubmit={onSubmit} />\n                    : <ProfileData profile={profile} goToEditMode={() => { setEditMode(true) }} />}\n                <ProfileStatusHook status={status} updateStatus={updateStatus} />\n            </div>\n        </div>\n    )\n};\nconst ProfileData = ({ profile, goToEditMode }) => {\n    return (\n        <div>\n            <div>\n                <button onClick={goToEditMode}>Edit</button>\n            </div>\n            <div>\n                <span>Full name:</span> {profile.fullName}\n            </div>\n            <div>\n                <span>My professional skills:</span> {profile.lookingForAJobDescription}\n            </div>\n            <div>\n                <span>About me:</span> {profile.aboutMe}\n            </div>\n        </div>\n    )\n};\n\n\nexport default ProfileInfo;","import MyPostsContainer from './MyPosts/MyPostContainer';\nimport classes from './Profile.module.css'\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\n\n\nconst Profile = (props) => {\n    return (\n        <div className={classes.content}>\n            <ProfileInfo savePhoto={props.savePhoto}\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n                saveProfile={props.saveProfile} />\n            <MyPostsContainer />\n        </div>\n    )\n}\n\nexport default Profile;","import Profile from \"./Profile\";\nimport React from \"react\";\nimport { getProfile, getStatus, updateStatus, savePhoto, saveProfile } from \"../../Redux/profileReducer\";\nimport { connect } from \"react-redux\";\nimport { withAuthNavigate } from \"../../hoc/withAuthNavigate\";\nimport { withRouter } from \"../../hoc/withRouter\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    isAuth: state.auth.isAuth,\n    logged: state.auth.id\n});\n\nclass ProfileContainer extends React.Component {\n    componentDidMount() {\n        let userId = this.props.router.params.userId;\n        if (!userId) {\n            userId = this.props.logged;\n        }\n\n        this.props.getProfile(userId);\n        this.props.getStatus(userId);\n    };\n\n    render() {\n        return (\n            <Profile {...this.props}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatus={this.props.updateStatus}\n                savePhoto={this.props.savePhoto}\n            />\n        )\n    };\n};\n\nexport default compose(\n    connect(mapStateToProps, { getProfile, getStatus, updateStatus, savePhoto, saveProfile }),\n    withRouter,\n    withAuthNavigate\n)(ProfileContainer)","import { useLocation, useNavigate, useParams } from \"react-router-dom\";\n\nexport function withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        const location = useLocation();\n        const navigate = useNavigate();\n        const params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n    return ComponentWithRouterProp;\n}"],"names":["props","useState","counter","setCounter","useEffect","className","styles","src","alt","message","onClick","MyPosts","React","postsElements","posts","map","p","text","AddPostFormRedux","onSubmit","values","addPost","newPost","Textarea","Element","reduxForm","form","handleSubmit","Field","component","name","placeholder","validate","required","maxLengthCreator","connect","state","profilePage","newPostText","dispatch","addPostActionCreator","editMode","setEditMode","status","setStatus","onDoubleClick","autoFocus","onBlur","updateStatus","value","onChange","e","currentTarget","Input","ProfileDataReduxForm","createField","ProfileData","profile","goToEditMode","fullName","lookingForAJobDescription","aboutMe","savePhoto","saveProfile","Preloader","photos","large","Photo","type","target","files","length","initialValues","formData","classes","ProfileContainer","userId","this","router","params","logged","getProfile","getStatus","compose","isAuth","auth","id","Component","location","useLocation","navigate","useNavigate","useParams","withAuthNavigate"],"sourceRoot":""}